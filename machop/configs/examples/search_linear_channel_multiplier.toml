# basics
model = "jsc-three-linear-layers"
dataset = "jsc"
task = "cls"
 
max_epochs = 10
batch_size = 128
learning_rate = 1e-4
accelerator = "cpu"
project = "jsc-three-linear-layers-L4Q4"
seed = 42
log_every_n_steps = 5
# load_name = <path to checkpoint> # if want to use pretrained model
# load_type = "pl" 

[passes.quantize]
by = "type"
[passes.quantize.default.config]
name = "NA"
[passes.quantize.linear.config]
name = "integer"
"data_in_width" = 8
"data_in_frac_width" = 4
"weight_width" = 8
"weight_frac_width" = 4
"bias_width" = 8
"bias_frac_width" = 4
 
[search.search_space]
name = "redefine/linear_channel_multiplier"
 
[search.search_space.setup]
by = "name"
 
[search.search_space.seed.default.config]
# the only choice "NA" is used to indicate that layers are not quantized by default
name = ["NA"]
 
[search.search_space.seed.seq_blocks_2.config]
# if search.search_space.setup.by = "name", this seed will be used to quantize the mase graph node with name "seq_blocks_2"
name = ["output_only"]
channel_multiplier_out = [1, 2, 3, 4, 5, 6]
 
[search.search_space.seed.seq_blocks_4.config]
# if search.search_space.setup.by = "name", this seed will be used to quantize the mase graph node with name "seq_blocks_4"
name = ["both"]
# channel_multiplier_in = [1, 2, 3, 4] #input must match with previous output
channel_multiplier_out = [1, 2, 3, 4, 5, 6]

# [search.search_space.seed.seq_blocks_6.config]
# if search.search_space.setup.by = "name", this seed will be used to quantize the mase graph node with name "seq_blocks_6"
# name = ["input_only"]
# channel_multiplier = [1, 2, 3, 4] #input must match with previous output

[search.strategy]
name = "optuna"
eval_mode = false # run training + validation for each trial

[search.strategy.sw_runner.basic_train]
name = "accuracy"
data_loader = "train_dataloader"
num_samples = 999999
max_epochs = 10
lr_scheduler = "linear"
optimizer = "adam"
learning_rate = 1e-4
num_warmup_steps = 0
 
[search.strategy.hw_runner.hw_dummy]
name = "hw_dummy"
 
[search.strategy.setup]
n_jobs = 1
n_trials = 20
timeout = 20000
sampler = "tpe" # bruteforce(optuna/bruteforce) / tpe(optuna)
# sum_scaled_metrics = true # single objective
# direction = "maximize"
sum_scaled_metrics = false # multi objective

[search.strategy.metrics]
# loss.scale = 1.0
# loss.direction = "minimize"
accuracy.scale = 1.0
accuracy.direction = "maximize"
# average_bitwidth.scale = 0.2
# average_bitwidth.direction = "minimize"
 